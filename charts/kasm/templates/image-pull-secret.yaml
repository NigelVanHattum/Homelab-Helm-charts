{{/*
Add Image pull auth credentials
*/}}
{{- if and .Values.imagePullSecrets.enabled (ne .Values.imagePullSecrets.username "") (ne .Values.imagePullSecrets.password "") }}
{{- $secretName := .Values.imagePullSecrets.name | default (printf "%s-image-pull-secret" .Release.Name) }}
{{- $username := .Values.imagePullSecrets.username }}
{{- $password := .Values.imagePullSecrets.password }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $secretName }}
    {{- include "kasm.defaultLabels" . | indent 4 }}
    {{- with .Values.imagePullSecrets.labels }}{{- toYaml . | nindent 4 }}{{- end }}
    {{- with .Values.extraLabels.secret }}{{- toYaml . | nindent 4 }}{{- end }}
    {{- with .Values.labels }}{{- toYaml . | nindent 4 }}{{- end }}
  annotations:
    helm.sh/hook: pre-install
    {{- with .Values.annotations.secret }}{{- toYaml . | nindent 4 }}{{- end }}
    {{- with .Values.imagePullSecrets.annotations }}{{- toYaml . | nindent 4 }}{{- end }}
type: {{ if or (eq .Values.imagePullSecrets.type "dockerconfigjson") (eq .Values.imagePullSecrets.type "dockercfg") }}{{ printf "kubernetes.io/%s" .Values.imagePullSecrets.type }}{{ else }}{{ printf "Opaque" }}{{ end }}
data:
{{- if eq .Values.imagePullSecrets.type "dockerconfigjson" }}
{{- $server := .Values.imagePullSecrets.server | required "imagePullSecrets.server is required for dockerconfigjson type" }}
{{- $email := .Values.imagePullSecrets.email | default "" }}
{{- $auth := (printf "%s:%s" $username $password) | b64enc }}
{{- $dockerConfig := dict "auths" (dict $server (dict "username" $username "password" $password "email" $email "auth" $auth)) }}
  .dockerconfigjson: {{ $dockerConfig | toJson | b64enc }}
{{- else if eq .Values.imagePullSecrets.type "dockercfg" }}
{{- $server := .Values.imagePullSecrets.server | required "imagePullSecrets.server is required for dockercfg type" }}
{{- $email := .Values.imagePullSecrets.email | default "" }}
{{- $auth := printf "%s:%s" $username $password | b64enc }}
{{- $dockerCfg := dict $server (dict "username" $username "password" $password "email" $email "auth" $auth) }}
  .dockercfg: {{ $dockerCfg | toJson | b64enc }}
{{- else if eq .Values.imagePullSecrets.type "basic" }}
  username: {{ $username | b64enc }}
  password: {{ $password | b64enc }}
{{- else }}
{{- fail "Invalid imagePullSecrets.type. Must be 'dockerconfigjson', 'dockercfg', or 'basic'" }}
{{- end }}
{{- end }}