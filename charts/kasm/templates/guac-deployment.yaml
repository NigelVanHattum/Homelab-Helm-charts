{{/*
Deploy the Guacamole Web RDP if .Values.components.guac.enabled set to true
*/}}
{{- $constants := (include "kasm.constants" . | fromYaml) -}}
{{- $guacReplicas := include "replicas.preset" (dict "node" ($constants.guac.component) "size" .Values.deploymentSize) -}}
{{- if .Values.components.guac.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $constants.guac.name }}-deployment
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $constants.guac.name }}
    app.kubernetes.io/component: {{ $constants.guac.component }}
    {{- include "kasm.defaultLabels" . | indent 4 }}
    {{- with .Values.components.guac.labels }}{{- toYaml . | nindent 4 }}{{- end }}
    {{- with .Values.extraLabels.deployment }}{{- toYaml . | nindent 4 }}{{- end }}
    {{- with .Values.labels }}{{- toYaml . | nindent 4 }}{{- end }}
  {{- if or .Values.components.guac.annotations .Values.annotations.deployment }}
  annotations:
    {{- with .Values.annotations.deployment }}{{- toYaml . | nindent 4 }}{{- end }}
    {{- with .Values.components.guac.annotations }}{{- toYaml . | nindent 4 }}{{- end }}
  {{- end }}
spec:
  replicas: {{ $guacReplicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: {{ add1 $guacReplicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $constants.guac.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $constants.guac.name }}
        app.kubernetes.io/component: {{ $constants.guac.component }}
        {{- include "kasm.defaultLabels" . | indent 8 }}
        {{- with .Values.components.guac.labels }}{{ toYaml . | nindent 8 }}{{- end }}
        {{- with .Values.extraLabels.pod }}{{ toYaml . | nindent 8 }}{{- end }}
        {{- with .Values.labels }}{{- toYaml . | nindent 8 }}{{- end }}
      {{- if or .Values.components.guac.annotations .Values.annotations.pod }}
      annotations:
        {{- with .Values.annotations.pod }}{{ toYaml . | nindent 8 }}{{- end }}
        {{- with .Values.components.guac.annotations }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
    spec:
      restartPolicy: {{ .Values.restartPolicy }}
      {{- if .Values.imagePullSecrets.enabled }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name | default (printf "%s-image-pull-secret" .Release.Name) }}
      {{- end }}
      {{- if .Values.applySecurity }}
        {{- include "kasm.podSecurity" . | indent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      {{- if .Values.applySecurity }}
        - name: {{ $constants.guac.name }}-tmp-perms
          image: {{ $constants.api.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
            - /bin/sh
            - -c
          args:
            - |
              echo "Setting permissions and ownership for /tmp..." && chown -R 1000:1000 /tmp && chmod -R 777 /tmp
              echo "Setting permissions and ownership for /opt/kasm/current..." && chown -R 1000:1000 /opt/kasm/current && chmod -R 0770 /opt/kasm/current
              echo "Done"
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
        {{- end }}
        {{- include "kasm.initContainer" (dict "serviceName" ($constants.api.svc) "servicePort" ($constants.api.port) "path" "/api/__healthcheck" "schema" "http" "image" ($constants.api.image)) | indent 8 }}
        {{- if .Values.applySecurity }}
          {{- include "kasm.containerSecurity" . | indent 10 }}
        {{- end }}
      containers:
        - name: {{ $constants.guac.name }}-container
          image: {{ $constants.guac.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: CLUSTER_SIZE
              value: "4"
            - name: REGISTRATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: service-token
            - name: ZONE
            {{- if .Values.kasmZones }}
              {{- with index .Values.kasmZones 0 }}
              value: {{ .name }}
              {{- end }}
            {{- else }}
              value: "default"
            {{- end }}
            - name: KUBERNETES_SERVICE_HOST
              value: "true"
            - name: SERVER_ADDRESS
              value: {{ $constants.guac.svc }}
            - name: SERVER_PORT
              value: {{ $constants.guac.port | quote }}
          ports:
            - name: {{ $constants.guac.portName }}
              containerPort: {{ $constants.guac.port }}
              protocol: TCP
          {{- if .Values.applySecurity }}
          volumeMounts:
            - name: {{ $constants.guac.name }}-data
              mountPath: /tmp
            - name: {{ $constants.guac.name }}-readonly
              mountPath: /opt/kasm/current/log
              readOnly: true
            - name: {{ $constants.guac.name }}-data
              mountPath: /opt/kasm/current/tmp/guac
          {{- end }}
          {{- if .Values.applyHealthChecks }}
          livenessProbe:
            {{- include "health.tcp" (dict "portName" $constants.guac.portName ) | indent 12 }}
          {{- end }}
          {{- if .Values.applyHealthChecks }}
          readinessProbe:
            {{- include "health.http" (dict "path" "/__healthcheck" "portName" $constants.guac.portName ) | indent 12 }}
          {{- end }}
          {{- if .Values.components.guac.resources }}
          resources: {{- toYaml .Values.components.guac.resources | nindent 12 }}
          {{- else }}
          resources: {{- include "resources.preset" (dict "node" ($constants.guac.component) "size" .Values.deploymentSize) | nindent 12 }}
          {{- end }}
          {{- if .Values.applySecurity }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
      {{- if .Values.applySecurity }}
      volumes:
        - name: {{ $constants.guac.name }}-data
          emptyDir:
            sizeLimit: 1Gi
        - name: {{ $constants.guac.name }}-readonly
          emptyDir:
            sizeLimit: 150Mi
      {{- end }}
{{- end }}
