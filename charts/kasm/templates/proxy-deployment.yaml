{{/*
Kasm Proxy server Deployment definition
*/}}
{{- $constants := (include "kasm.constants" . | fromYaml) -}}
{{- $proxyReplicas := include "replicas.preset" (dict "node" $constants.proxy.component "size" .Values.deploymentSize) -}}
{{- $defaultLabels := include "kasm.defaultLabels" . }}
{{- $values := .Values }}
{{- range $idx, $zone := (.Values.kasmZones | default (list (dict "name" "default"))) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s-deployment" $constants.proxy.name (regexReplaceAll "[^a-zA-Z0-9]+" $zone.name "-" | lower) }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ printf "%s-%s" $constants.proxy.name (regexReplaceAll "[^a-zA-Z0-9]+" $zone.name "-" | lower) }}
    app.kubernetes.io/component: {{ $constants.proxy.component }}
    {{- $defaultLabels | indent 4 }}
    {{- with $values.components.proxy.labels }}{{- toYaml . | nindent 4 }}{{- end }}
    {{- with $values.extraLabels.deployment }}{{- toYaml . | nindent 4 }}{{- end }}
    {{- with $values.labels }}{{- toYaml . | nindent 4 }}{{- end }}
  {{- if or $values.components.proxy.annotations $values.annotations.deployment }}
  annotations:
    {{- with $values.annotations.deployment }}{{- toYaml . | nindent 4 }}{{- end }}
    {{- with $values.components.proxy.annotations }}{{- toYaml . | nindent 4 }}{{- end }}
  {{- end }}
spec:
  replicas: {{ $proxyReplicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: {{ add1 $proxyReplicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ printf "%s-%s" $constants.proxy.name (regexReplaceAll "[^a-zA-Z0-9]+" $zone.name "-" | lower) }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ printf "%s-%s" $constants.proxy.name (regexReplaceAll "[^a-zA-Z0-9]+" $zone.name "-" | lower) }}
        app.kubernetes.io/component: {{ $constants.proxy.component }}
        {{- $defaultLabels | indent 8 }}
        {{- if or $values.components.proxy.labels $values.extraLabels.pod $values.labels }}
          {{- with $values.components.proxy.labels }}{{ toYaml . | nindent 8 }}{{- end }}
          {{- with $values.extraLabels.pod }}{{ toYaml . | nindent 8 }}{{- end }}
          {{- with $values.labels }}{{- toYaml . | nindent 8 }}{{- end }}
        {{- end }}
      {{- if or $values.components.proxy.annotations $values.annotations.pod }}
      annotations:
        {{- with $values.annotations.pod }}{{ toYaml . | nindent 8 }}{{- end }}
        {{- with $values.components.proxy.annotations }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
    spec:
      restartPolicy: {{ $values.restartPolicy }}
      {{- if $values.imagePullSecrets.enabled }}
      imagePullSecrets:
        - name: {{ $values.imagePullSecrets.name | default (printf "%s-image-pull-secret" $.Release.Name) }}
      {{- end }}
      {{- with $values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if $values.applySecurity }}
        {{- include "kasm.podSecurity" . | indent 6 }}
      {{- end }}
      initContainers:
        {{- if $values.applySecurity }}
        - name: {{ $constants.proxy.name }}-data-perms
          image: {{ $constants.api.image }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -ec
          args:
            - |
              echo "Setting permissions and ownership for /var/cache/nginx..." && chown -R 1000:1000 /var/cache/nginx && chmod -R 755 /var/cache/nginx
              echo "Setting permissions and ownership for /var/log/external/nginx..." && chown -R 1000:1000 /var/log/external/nginx && chmod -R 755 /var/log/external/nginx
              echo "Setting permissions and ownership for /tmp..." && chmod -R 777 /tmp
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
            - name: {{ $constants.proxy.name }}-data
              mountPath: /var/cache/nginx
            - name: {{ $constants.proxy.name }}-data
              mountPath: /var/log/external/nginx
            - name: {{ $constants.proxy.name }}-data
              mountPath: /run
        {{- end }}
        {{- include "kasm.initContainer" (dict "serviceName" $constants.api.svc "servicePort" $constants.api.port "path" "/api/__healthcheck" "schema" "http" "image" $constants.api.image) | indent 8 }}
        {{- if $values.applySecurity }}
          {{- include "kasm.containerSecurity" . | indent 10 }}
        {{- end }}
        {{- include "kasm.initContainer" (dict "serviceName" (printf "%s-%s" $constants.manager.svc (regexReplaceAll "[^a-zA-Z0-9]+" $zone.name "-" | lower)) "servicePort" $constants.manager.port "path" "/__healthcheck" "schema" "http" "image" $constants.api.image) | indent 8 }}
        {{- if $values.applySecurity }}
          {{- include "kasm.containerSecurity" . | indent 10 }}
        {{- end }}
        {{- if $values.components.guac.enabled }}
          {{- include "kasm.initContainer" (dict "serviceName" $constants.guac.svc "servicePort" $constants.guac.port "path" "/__healthcheck" "schema" "http" "image" $constants.api.image) | indent 8 }}
          {{- if $values.applySecurity }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
        {{- end }}
        {{- if $values.components.rdpGateway.enabled }}
          {{- include "kasm.initContainer" (dict "serviceName" $constants.rdpGateway.svc "servicePort" $constants.rdpGateway.port "path" "/__healthcheck" "schema" "http" "image" $constants.api.image) | indent 8 }}
          {{- if $values.applySecurity }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
        {{- end }}
      containers:
        - name: {{ $constants.proxy.name }}-container
          image: {{ $constants.proxy.image }}
          imagePullPolicy: {{ $values.imagePullPolicy }}
          {{- if $values.components.proxy.resources }}
          resources: {{- toYaml $values.components.proxy.resources | nindent 12 }}
          {{- else }}
          resources: {{- include "resources.preset" (dict "node" $constants.proxy.component "size" $values.deploymentSize) | nindent 12 }}
          {{- end }}
          {{- if $values.applySecurity }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
          volumeMounts:
            - name: {{ $constants.proxy.name }}-cert
              mountPath: /etc/ssl/certs/kasm_nginx.crt
              subPath: tls.crt
            - name: {{ $constants.proxy.name }}-cert
              mountPath: /etc/ssl/private/kasm_nginx.key
              subPath: tls.key
            - name: {{ $constants.proxy.name }}-settings-config
              mountPath: /etc/nginx/conf.d
            - name: {{ $constants.proxy.name }}-services-config
              mountPath: /etc/nginx/conf.d/services.d
            - name: {{ $constants.proxy.name }}-base-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            {{- if $values.applySecurity }}
            - name: {{ $constants.proxy.name }}-data
              mountPath: /var/cache/nginx
            - name: {{ $constants.proxy.name }}-data
              mountPath: /var/log/external/nginx
            - name: {{ $constants.proxy.name }}-data
              mountPath: /run
            {{- end }}
          ports:
            - name: {{ $constants.proxy.portName }}-http
              containerPort: {{ $constants.proxy.http }}
              protocol: TCP
            - name: {{ $constants.proxy.portName }}-https
              containerPort: {{ $constants.proxy.https }}
              protocol: TCP
          {{- if $values.applyHealthChecks }}
          livenessProbe:
            {{- include "health.tcp" (dict "portName" (print $constants.proxy.portName "-http") ) | indent 12 }}
          {{- end }}
          {{- if $values.applyHealthChecks }}
          readinessProbe:
            {{- include "health.command" (dict "command" "nginx -t") | indent 12 }}
          {{- end }}
      volumes:
        - name: {{ $constants.proxy.name }}-cert
          secret:
            secretName: {{ $values.certificate.secretName }}
        - name: {{ $constants.proxy.name }}-base-config
          configMap:
            name: {{ $constants.proxy.name }}-base-configmap
        - name: {{ $constants.proxy.name }}-settings-config
          configMap:
            name: {{ printf "%s-%s-settings-configmap" $constants.proxy.name (regexReplaceAll "[^a-zA-Z0-9]+" $zone.name "-" | lower) }}
        - name: {{ $constants.proxy.name }}-services-config
          configMap:
            name: {{ $constants.proxy.name }}-services-configmap
        {{- if $values.applySecurity }}
        - name: {{ $constants.proxy.name }}-data
          emptyDir:
            sizeLimit: 1Gi
        {{- end }}
{{- end }}